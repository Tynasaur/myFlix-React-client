var helpers = require("../../../../../AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _registrationViewRegistrationView = require('../registration-view/registration-view');
  var _loginViewLoginView = require('../login-view/login-view');
  var _movieCardMovieCard = require('../movie-card/movie-card');
  var _movieViewMovieView = require('../movie-view/movie-view');
  var _jsxFileName = "C:\\Users\\thain\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx";
  class MainView extends _reactDefault.default.Component {
    constructor() {
      super();
      this.state = {
        movies: [],
        selectedMovie: null,
        user: null
      };
    }
    componentDidMount() {
      _axiosDefault.default.get('https://thainas-myflix.herokuapp.com/movies').then(response => {
        this.setState({
          movies: response.data
        });
      }).catch(error => {
        console.log(error);
      });
    }
    /*When a movie is clicked, this funciton is invoked and updates the state of the `selectedMovie` *property to the movie*/
    setSelectedMovie(movie) {
      this.setState({
        selectedMovie: movie
      });
    }
    /*When a user succesfully logd in, this fucntion jupdates the `user` property in the state to that *particular user*/
    onRegistered(register) {
      this.setState({
        register
      });
    }
    onLoggedIn(user) {
      this.setState({
        user
      });
    }
    /*When a user successfully logs in, this function updates the `user` property in state to the *particular user*/
    onBackClick() {
      this.setState({
        selectedMovie: null
      });
    }
    render() {
      const {movies, selectedMovie, register, user} = this.state;
      if (!register) return (
        /*#__PURE__*/_reactDefault.default.createElement(_registrationViewRegistrationView.RegistrationView, {
          onRegistered: register => this.onRegistered(register),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 66,
            columnNumber: 27
          }
        })
      );
      if (!user) return (
        /*#__PURE__*/_reactDefault.default.createElement(_loginViewLoginView.LoginView, {
          onLoggedIn: user => this.onLoggedIn(user),
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 68,
            columnNumber: 23
          }
        })
      );
      // If there is no user, the LoginView is rendered. If there is a user logged in, the user details are *passed as a prop to the LoginView
      // Before the movies have been loaded
      if (movies.length === 0) return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "main-view",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 73,
            columnNumber: 37
          }
        })
      );
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "main-view",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 76,
            columnNumber: 7
          }
        }, selectedMovie ? /*#__PURE__*/_reactDefault.default.createElement(_movieViewMovieView.MovieView, {
          movie: selectedMovie,
          onBackClick: newSelectedMovie => {
            this.setSelectedMovie(newSelectedMovie);
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 80,
            columnNumber: 13
          }
        }) : movies.map(movie => /*#__PURE__*/_reactDefault.default.createElement(_movieCardMovieCard.MovieCard, {
          key: movie._id,
          movie: movie,
          onMovieClick: newSelectedMovie => {
            this.setSelectedMovie(newSelectedMovie);
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 82,
            columnNumber: 13
          }
        })))
      );
    }
  }
  exports.default = MainView;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
